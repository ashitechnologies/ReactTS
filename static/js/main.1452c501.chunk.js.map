{"version":3,"sources":["model/model.ts","reducers/todo.ts","reducers/createReducer.ts","configureStore.tsx","reducers/index.ts","components/HomeBox.tsx","pages/HomePage.tsx","actions/index.ts","actions/todo.ts","components/TodoTable.tsx","components/index.ts","components/TodoDialog.tsx","pages/TodoPage.tsx","withRoot.tsx","App.tsx","ReduxRoot.tsx","index.tsx"],"names":["ActionType","initialState","handlers","todoList","_createReducer","Object","defineProperty","ADD_TODO","state","action","concat","toConsumableArray","payload","COMPLETE_TODO","map","t","id","objectSpread","completed","UNCOMPLETE_TODO","DELETE_TODO","filter","arguments","length","undefined","hasOwnProperty","type","persistConfig","key","version","storage","localforage","blacklist","history","createLogger","createBrowserHistory","middleware","applyMiddleware","thunk","persistedReducer","persistReducer","combineReducers","todoReducer","styledBy","property","props","mapping","useStyles","makeStyles","theme","box","display","alignItems","borderRadius","background","red","blue","height","size","width","text","color","HomeBox","other","objectWithoutProperties","classes","react","Paper","assign","className","Typography","variant","root","textAlign","paddingTop","paddingLeft","paddingRight","centerContainer","flex","justifyContent","flexDirection","button","marginTop","HomePage","_React$useState","React","_React$useState2","slicedToArray","boxColor","setBoxColor","useSelector","gutterBottom","components_HomeBox","Button","onClick","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","a","bindActionCreators","addTodo","todo","completeTodo","todoId","getState","uncompleteTodo","deleteTodo","paper","minWidth","table","TodoTable","todoActions","TodoActions","Table","TableHead","TableRow","TableCell","padding","TableBody","n","hover","event","Checkbox","checked","IconButton","aria-label","Delete_default","textField","margin","TodoDialog","open","onClose","newTodoText","setNewTodoText","handleClose","Math","random","Dialog","DialogTitle","TextField","multiline","value","onChange","target","DialogActions","breakpoints","down","buttonContainer","marginBottom","TodoPage","setOpen","Grid","container","components_TodoDialog","item","xs","components","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","withRoot","Component","ThemeProvider","CssBaseline","Routes","content","react_router","exact","path","component","Drawer","drawerHeader","Divider","List","ListItem","push","ListItemIcon","Home_default","ListItemText","TodoIcon","uncompletedTodos","Badge","badgeContent","FormatListNumbered_default","zIndex","overflow","appFrame","position","appBar","drawer","navIconHide","up","mixins","toolbar","drawerPaper","backgroundColor","default","connect","withWidth","mobileOpen","setMobileOpen","handleDrawerToggle","AppBar","Toolbar","Menu_default","noWrap","isWidthUp","Hidden","mdUp","anchor","ModalProps","keepMounted","App_Drawer","smDown","store","createStore","persistor","persistStore","configureStore","ReduxRoot","es","integration_react","loading","src_App","rootEl","document","getElementById","ReactDOM","src_ReduxRoot"],"mappings":"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","file":"static/js/main.1452c501.chunk.js","sourcesContent":["\nexport interface Todo {\n    id: number;\n    text: string;\n    completed: boolean;\n}\n\nexport enum ActionType {\n    ADD_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    UNCOMPLETE_TODO,\n}\n\nexport interface Action<T> {\n    type: ActionType;\n    payload: T;\n}","import { Action, ActionType, Todo } from \"../model/model\";\nimport createReducer from \"./createReducer\";\n\nexport const todoList = createReducer<Todo[]>([], {\n\t[ActionType.ADD_TODO](state: Todo[], action: Action<Todo>) {\n\t\treturn [...state, action.payload];\n\t},\n\t[ActionType.COMPLETE_TODO](state: Todo[], action: Action<number>) {\n\t\t// search after todo item with the given id and set completed to true\n\t\treturn state.map(t =>\n\t\t\tt.id === action.payload ? { ...t, completed: true } : t\n\t\t);\n\t},\n\t[ActionType.UNCOMPLETE_TODO](state: Todo[], action: Action<number>) {\n\t\t// search after todo item with the given id and set completed to false\n\t\treturn state.map(t =>\n\t\t\tt.id === action.payload ? { ...t, completed: false } : t\n\t\t);\n\t},\n\t[ActionType.DELETE_TODO](state: Todo[], action: Action<number>) {\n\t\t// remove all todos with the given id\n\t\treturn state.filter(t => t.id !== action.payload);\n\t},\n});\n","/**\n * Created by toni on 12.03.2017.\n */\nimport { Reducer } from \"redux\";\nimport { Action } from \"../model/model\";\n\nexport default function createReducer<S>(\n\tinitialState: S,\n\thandlers: any\n): Reducer<S> {\n\tconst r = (state: S = initialState, action: Action<S>): S => {\n\t\tif (handlers.hasOwnProperty(action.type)) {\n\t\t\treturn handlers[action.type](state, action);\n\t\t} else {\n\t\t\treturn state;\n\t\t}\n\t};\n\n\treturn r as Reducer<S>;\n}\n","import { createBrowserHistory } from \"history\";\nimport * as localforage from \"localforage\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport { PersistConfig, persistReducer, persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig: PersistConfig = {\n\tkey: \"root\",\n\tversion: 1,\n\tstorage: localforage,\n\tblacklist: [],\n};\n\nconst logger = (createLogger as any)();\nconst history = createBrowserHistory();\n\nconst dev = process.env.NODE_ENV === \"development\";\n\nlet middleware = dev ? applyMiddleware(logger, thunk) : applyMiddleware(thunk);\n\nif (dev) {\n\tmiddleware = composeWithDevTools(middleware);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nexport default () => {\n\tconst store = createStore(persistedReducer, {}, middleware);\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n\nexport { history };\n","import { History } from \"history\";\nimport { combineReducers } from \"redux\";\nimport { Todo } from \"../model/model\";\nimport * as todoReducer from \"./todo\";\n\nexport interface RootState {\n\ttodoList: Todo[];\n}\n\nexport default (history: History) =>\n\tcombineReducers({\n\t\t...todoReducer,\n\t});\n","import { makeStyles, Paper, Theme, Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\n\ninterface Props {\n\tsize: number;\n\tcolor: \"red\" | \"blue\" | string;\n}\n\nfunction HomeBox(props: Props) {\n\tconst { size, ...other } = props;\n\n\tconst classes = useStyles(props);\n\n\treturn (\n\t\t<Paper className={classes.box} {...other}>\n\t\t\t<Typography variant=\"subtitle1\" className={classes.text}>\n\t\t\t\tI'm an example how to handle dynamic styles based on props\n\t\t\t</Typography>\n\t\t</Paper>\n\t);\n}\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]];\nconst useStyles = makeStyles((theme: Theme) => ({\n\tbox: (props: Props) => ({\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tborderRadius: 8,\n\t\tbackground: styledBy(\"color\", props, {\n\t\t\tred: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n\t\t\tblue: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n\t\t}),\n\t\theight: props.size,\n\t\twidth: props.size,\n\t}),\n\n\ttext: {\n\t\tcolor: \"white\",\n\t},\n}));\n\nexport default HomeBox;\n","import { Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport HomeBox from \"../components/HomeBox\";\nimport { RootState } from \"../reducers\";\n\ninterface Props extends RouteComponentProps<void> {}\n\nfunction HomePage(props: Props) {\n\tconst classes = useStyles();\n\tconst [boxColor, setBoxColor] = React.useState(\"red\");\n\tconst todoList = useSelector((state: RootState) => state.todoList);\n\n\tconst onButtonClick = () =>\n\t\tsetBoxColor(boxColor === \"red\" ? \"blue\" : \"red\");\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tYou have {todoList.length} TODOs in your list!\n\t\t\t</Typography>\n\t\t\t<div className={classes.centerContainer}>\n\t\t\t\t<HomeBox size={300} color={boxColor} />\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tonClick={onButtonClick}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\tChange Color\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\theight: \"100%\",\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n\t\tflex: 1,\n\t\theight: \"90%\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tflexDirection: \"column\",\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n\nexport default HomePage;\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nexport function useActions(actions: any, deps?: any): any {\n\tconst dispatch = useDispatch();\n\treturn useMemo(\n\t\t() => {\n\t\t\tif (Array.isArray(actions)) {\n\t\t\t\treturn actions.map(a => bindActionCreators(a, dispatch));\n\t\t\t}\n\t\t\treturn bindActionCreators(actions, dispatch);\n\t\t},\n\t\tdeps ? [dispatch, ...deps] : deps\n\t);\n}\n","import { Action, ActionType, Todo } from \"../model/model\";\n\nexport function addTodo(todo: Todo): Action<Todo> {\n\treturn {\n\t\ttype: ActionType.ADD_TODO,\n\t\tpayload: todo,\n\t};\n}\n\n// Async Function expample with redux-thunk\nexport function completeTodo(todoId: number) {\n\t// here you could do API eg\n\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch({ type: ActionType.COMPLETE_TODO, payload: todoId });\n\t};\n}\n\nexport function uncompleteTodo(todoId: number): Action<number> {\n\treturn {\n\t\ttype: ActionType.UNCOMPLETE_TODO,\n\t\tpayload: todoId,\n\t};\n}\n\nexport function deleteTodo(todoId: number): Action<number> {\n\treturn {\n\t\ttype: ActionType.DELETE_TODO,\n\t\tpayload: todoId,\n\t};\n}\n","// prettier-ignore\nimport { Checkbox, IconButton, Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../actions\";\nimport * as TodoActions from \"../actions/todo\";\nimport { Todo } from \"../model/model\";\nimport { RootState } from \"../reducers\";\n\ninterface Props {}\n\nfunction TodoTable(props: Props) {\n\tconst classes = useStyles();\n\tconst todoList = useSelector((state: RootState) => state.todoList);\n\tconst todoActions = useActions(TodoActions);\n\n\tconst onRowClick = (todo: Todo) => {\n\t\tif (todo.completed) {\n\t\t\ttodoActions.uncompleteTodo(todo.id);\n\t\t} else {\n\t\t\ttodoActions.completeTodo(todo.id);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Paper className={classes.paper}>\n\t\t\t<Table className={classes.table}>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell padding=\"default\">Completed</TableCell>\n\t\t\t\t\t\t<TableCell padding=\"default\">Text</TableCell>\n\t\t\t\t\t\t<TableCell padding=\"default\">Delete</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{todoList.map((n: Todo) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\tkey={n.id}\n\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\tonClick={event => onRowClick(n)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">\n\t\t\t\t\t\t\t\t\t<Checkbox checked={n.completed} />\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">{n.text}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\taria-label=\"Delete\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\ttodoActions.deleteTodo(n.id)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</Paper>\n\t);\n}\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\twidth: \"100%\",\n\t\tminWidth: 260,\n\t\tdisplay: \"inline-block\",\n\t},\n\ttable: {\n\t\twidth: \"100%\",\n\t},\n});\n\nexport default TodoTable;\n","import TodoTable from \"./TodoTable\";\n\nexport { TodoTable };\n\nexport default TodoTable;\n","// prettier-ignore\nimport { Button, Dialog, DialogActions, DialogTitle, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useActions } from \"../actions\";\nimport * as TodoActions from \"../actions/todo\";\n\ninterface Props {\n\topen: boolean;\n\tonClose: () => void;\n}\n\nfunction TodoDialog(props: Props) {\n\tconst { open, onClose } = props;\n\tconst classes = useStyles();\n\tconst [newTodoText, setNewTodoText] = React.useState(\"\");\n\tconst todoActions = useActions(TodoActions);\n\n\tconst handleClose = () => {\n\t\ttodoActions.addTodo({\n\t\t\tid: Math.random(),\n\t\t\tcompleted: false,\n\t\t\ttext: newTodoText,\n\t\t});\n\t\tonClose();\n\n\t\t// reset todo text if user reopens the dialog\n\t\tsetNewTodoText(\"\");\n\t};\n\n\tconst handleChange = (event: any) => {\n\t\tsetNewTodoText(event.target.value);\n\t};\n\n\treturn (\n\t\t<Dialog open={open} onClose={handleClose}>\n\t\t\t<DialogTitle>Add a new TODO</DialogTitle>\n\t\t\t<TextField\n\t\t\t\tid=\"multiline-flexible\"\n\t\t\t\tmultiline\n\t\t\t\tvalue={newTodoText}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tclassName={classes.textField}\n\t\t\t/>\n\t\t\t<DialogActions>\n\t\t\t\t<Button color=\"primary\" onClick={handleClose}>\n\t\t\t\t\tOK\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nconst useStyles = makeStyles({\n\ttextField: {\n\t\twidth: \"80%\",\n\t\tmargin: 20,\n\t},\n});\n\nexport default TodoDialog;\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport TodoTable from \"../components\";\nimport TodoDialog from \"../components/TodoDialog\";\n\ninterface Props extends RouteComponentProps<void> {}\n\nfunction TodoPage(props: Props) {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst handleAddTodo = () => {\n\t\tsetOpen(true);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.root}>\n\t\t\t<TodoDialog open={open} onClose={handleClose} />\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\tTodo List\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<div className={classes.buttonContainer}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={handleAddTodo}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Todo\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<TodoTable />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\tpadding: 20,\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tpaddingTop: 50,\n\t\t\tpaddingLeft: 15,\n\t\t\tpaddingRight: 15,\n\t\t},\n\t},\n\n\tbuttonContainer: {\n\t\twidth: \"100%\",\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n\n\tbutton: {\n\t\tmarginBottom: 15,\n\t},\n}));\n\nexport default TodoPage;\n","import { CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as React from \"react\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: \"#e5e5e5\",\n\t\t\tmain: \"#727272\",\n\t\t\tdark: \"#363839\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: \"#ff5e50\",\n\t\t\tmain: \"#e41e26\",\n\t\t\tdark: \"#a90000\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t},\n});\n\nfunction withRoot(Component: any) {\n\tfunction WithRoot(props: object) {\n\t\t// MuiThemeProvider makes the theme available down the React tree\n\t\t// thanks to React context.\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t{/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n\nexport default withRoot;\n","// prettier-ignore\nimport { AppBar, Badge, Divider, Drawer as DrawerMui, Hidden, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography, withWidth } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport { isWidthUp, WithWidth } from \"@material-ui/core/withWidth\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, RouteComponentProps, Router } from \"react-router-dom\";\nimport { history } from \"./configureStore\";\nimport { Todo } from \"./model/model\";\nimport HomePage from \"./pages/HomePage\";\nimport TodoPage from \"./pages/TodoPage\";\nimport { RootState } from \"./reducers/index\";\nimport withRoot from \"./withRoot\";\n\nfunction Routes() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.content}>\n\t\t\t<Route exact={true} path=\"/\" component={HomePage} />\n\t\t\t<Route exact={true} path=\"/home\" component={HomePage} />\n\t\t\t<Route exact={true} path=\"/todo\" component={TodoPage} />\n\t\t</div>\n\t);\n}\n\nfunction Drawer(props: { todoList: Todo[] }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.drawerHeader} />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button onClick={() => history.push(\"/\")}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Home\" />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button onClick={() => history.push(\"/todo\")}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<TodoIcon todoList={props.todoList} />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Todo\" />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t);\n}\n\ninterface Props extends RouteComponentProps<void>, WithWidth {\n\ttodoList: Todo[];\n}\n\nfunction App(props?: Props) {\n\tconst classes = useStyles();\n\tconst [mobileOpen, setMobileOpen] = React.useState(true);\n\n\tif (!props) {\n\t\treturn null;\n\t}\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.appFrame}>\n\t\t\t\t\t<AppBar className={classes.appBar}>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\t\t\tclassName={classes.navIconHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tnoWrap={isWidthUp(\"sm\", props.width)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate-React-App with Material-UI, Typescript,\n\t\t\t\t\t\t\t\tRedux and Routing\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Hidden mdUp>\n\t\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\t\tanchor={\"left\"}\n\t\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Drawer todoList={props.todoList} />\n\t\t\t\t\t\t</DrawerMui>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Hidden smDown>\n\t\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\t\topen\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Drawer todoList={props.todoList} />\n\t\t\t\t\t\t</DrawerMui>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Routes />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nfunction TodoIcon(props: { todoList: Todo[] }) {\n\tlet uncompletedTodos = props.todoList.filter(t => t.completed === false);\n\n\tif (uncompletedTodos.length > 0) {\n\t\treturn (\n\t\t\t<Badge color=\"secondary\" badgeContent={uncompletedTodos.length}>\n\t\t\t\t<FormatListNumberedIcon />\n\t\t\t</Badge>\n\t\t);\n\t} else {\n\t\treturn <FormatListNumberedIcon />;\n\t}\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tzIndex: 1,\n\t\toverflow: \"hidden\",\n\t},\n\tappFrame: {\n\t\tposition: \"relative\",\n\t\tdisplay: \"flex\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tposition: \"absolute\",\n\t},\n\tnavIconHide: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\tdrawerHeader: theme.mixins.toolbar,\n\tdrawerPaper: {\n\t\twidth: 250,\n\t\tbackgroundColor: theme.palette.background.default,\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\twidth: drawerWidth,\n\t\t\tposition: \"relative\",\n\t\t\theight: \"100%\",\n\t\t},\n\t},\n\tcontent: {\n\t\tbackgroundColor: theme.palette.background.default,\n\t\twidth: \"100%\",\n\t\theight: \"calc(100% - 56px)\",\n\t\tmarginTop: 56,\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\theight: \"calc(100% - 64px)\",\n\t\t\tmarginTop: 64,\n\t\t},\n\t},\n}));\n\nfunction mapStateToProps(state: RootState) {\n\treturn {\n\t\ttodoList: state.todoList,\n\t};\n}\n\nexport default connect(mapStateToProps)(withRoot(withWidth()(App)));\n","import { Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst { persistor, store } = configureStore();\n\nfunction ReduxRoot() {\n\treturn (\n\t\t<Provider store={store} >\n\t\t\t<PersistGate\n\t\t\t\tloading={<Typography>Loading...</Typography>}\n\t\t\t\tpersistor={persistor}\n\t\t\t>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n\nexport default ReduxRoot;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport ReduxRoot from \"./ReduxRoot\";\n\nconst rootEl = document.getElementById(\"root\");\nReactDOM.render(<ReduxRoot />, rootEl);\n\n// comment in for PWA with service worker in production mode\n// registerServiceWorker();\n"],"sourceRoot":""}